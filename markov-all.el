;; pre-trained markov frequency using
;; Adventures of Sherlock Holmes by Arthur Conan Doyle
;; from:
;; http://www.gutenberg.org/ebooks/48320

(require 'quail)
(quail-define-package
 "markov-insanity-a" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?n)
 ("j" ?t)
 ("d" ?s)
 ("k" ?r)
 ("s" ?l)
 ("l" ?d)
 ("a" ?i)
 ("g" ?v)
 ("h" ?c)
 ("r" ?y)
 ("u" ?m)
 ("e" ?b)
 ("i" ?p)
 ("w" ?g)
 ("o" ?k)
 ("q" ?w)
 ("p" ?u)
 ("t" ?f)
 ("y" ?h)
 ("v" ?z)
 ("n" ?x)
 ("c" ?j)
 ("m" ?o)
 ("x" ?e)
 ("z" ?q)
 ("b" ?a)
 ("F" ?N)
 ("J" ?T)
 ("D" ?S)
 ("K" ?R)
 ("S" ?L)
 ("L" ?D)
 ("A" ?I)
 ("G" ?V)
 ("H" ?C)
 ("R" ?Y)
 ("U" ?M)
 ("E" ?B)
 ("I" ?P)
 ("W" ?G)
 ("O" ?K)
 ("Q" ?W)
 ("P" ?U)
 ("T" ?F)
 ("Y" ?H)
 ("V" ?Z)
 ("N" ?X)
 ("C" ?J)
 ("M" ?O)
 ("X" ?E)
 ("Z" ?Q)
 ("B" ?A)
)


(quail-define-package
 "markov-insanity-b" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?u)
 ("d" ?l)
 ("k" ?o)
 ("s" ?a)
 ("l" ?r)
 ("a" ?y)
 ("g" ?i)
 ("h" ?s)
 ("r" ?t)
 ("u" ?b)
 ("e" ?j)
 ("i" ?v)
 ("w" ?m)
 ("o" ?d)
 ("q" ?n)
 ("p" ?h)
 ("t" ?w)
 ("y" ?c)
 ("v" ?f)
 ("n" ?g)
 ("c" ?p)
 ("m" ?k)
 ("x" ?x)
 ("z" ?q)
 ("b" ?z)
 ("F" ?E)
 ("J" ?U)
 ("D" ?L)
 ("K" ?O)
 ("S" ?A)
 ("L" ?R)
 ("A" ?Y)
 ("G" ?I)
 ("H" ?S)
 ("R" ?T)
 ("U" ?B)
 ("E" ?J)
 ("I" ?V)
 ("W" ?M)
 ("O" ?D)
 ("Q" ?N)
 ("P" ?H)
 ("T" ?W)
 ("Y" ?C)
 ("V" ?F)
 ("N" ?G)
 ("C" ?P)
 ("M" ?K)
 ("X" ?X)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-c" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?o)
 ("j" ?h)
 ("d" ?e)
 ("k" ?a)
 ("s" ?t)
 ("l" ?k)
 ("a" ?l)
 ("g" ?r)
 ("h" ?i)
 ("r" ?u)
 ("u" ?c)
 ("e" ?y)
 ("i" ?q)
 ("w" ?s)
 ("o" ?f)
 ("q" ?n)
 ("p" ?d)
 ("t" ?m)
 ("y" ?w)
 ("v" ?g)
 ("n" ?p)
 ("c" ?b)
 ("m" ?v)
 ("x" ?x)
 ("z" ?j)
 ("b" ?z)
 ("F" ?O)
 ("J" ?H)
 ("D" ?E)
 ("K" ?A)
 ("S" ?T)
 ("L" ?K)
 ("A" ?L)
 ("G" ?R)
 ("H" ?I)
 ("R" ?U)
 ("U" ?C)
 ("E" ?Y)
 ("I" ?Q)
 ("W" ?S)
 ("O" ?F)
 ("Q" ?N)
 ("P" ?D)
 ("T" ?M)
 ("Y" ?W)
 ("V" ?G)
 ("N" ?P)
 ("C" ?B)
 ("M" ?V)
 ("X" ?X)
 ("Z" ?J)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-d" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?o)
 ("d" ?i)
 ("k" ?a)
 ("s" ?r)
 ("l" ?s)
 ("a" ?y)
 ("g" ?u)
 ("h" ?l)
 ("r" ?d)
 ("u" ?v)
 ("e" ?g)
 ("i" ?n)
 ("w" ?f)
 ("o" ?m)
 ("q" ?w)
 ("p" ?k)
 ("t" ?c)
 ("y" ?h)
 ("v" ?j)
 ("n" ?p)
 ("c" ?t)
 ("m" ?b)
 ("x" ?x)
 ("z" ?q)
 ("b" ?z)
 ("F" ?E)
 ("J" ?O)
 ("D" ?I)
 ("K" ?A)
 ("S" ?R)
 ("L" ?S)
 ("A" ?Y)
 ("G" ?U)
 ("H" ?L)
 ("R" ?D)
 ("U" ?V)
 ("E" ?G)
 ("I" ?N)
 ("W" ?F)
 ("O" ?M)
 ("Q" ?W)
 ("P" ?K)
 ("T" ?C)
 ("Y" ?H)
 ("V" ?J)
 ("N" ?P)
 ("C" ?T)
 ("M" ?B)
 ("X" ?X)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-e" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?r)
 ("j" ?d)
 ("d" ?n)
 ("k" ?s)
 ("s" ?a)
 ("l" ?e)
 ("a" ?l)
 ("g" ?t)
 ("h" ?c)
 ("r" ?m)
 ("u" ?v)
 ("e" ?y)
 ("i" ?f)
 ("w" ?p)
 ("o" ?x)
 ("q" ?w)
 ("p" ?i)
 ("t" ?g)
 ("y" ?o)
 ("v" ?h)
 ("n" ?k)
 ("c" ?b)
 ("m" ?q)
 ("x" ?u)
 ("z" ?z)
 ("b" ?j)
 ("F" ?R)
 ("J" ?D)
 ("D" ?N)
 ("K" ?S)
 ("S" ?A)
 ("L" ?E)
 ("A" ?L)
 ("G" ?T)
 ("H" ?C)
 ("R" ?M)
 ("U" ?V)
 ("E" ?Y)
 ("I" ?F)
 ("W" ?P)
 ("O" ?X)
 ("Q" ?W)
 ("P" ?I)
 ("T" ?G)
 ("Y" ?O)
 ("V" ?H)
 ("N" ?K)
 ("C" ?B)
 ("M" ?Q)
 ("X" ?U)
 ("Z" ?Z)
 ("B" ?J)
)


(quail-define-package
 "markov-insanity-f" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?o)
 ("j" ?r)
 ("d" ?a)
 ("k" ?e)
 ("s" ?i)
 ("l" ?f)
 ("a" ?t)
 ("g" ?u)
 ("h" ?l)
 ("r" ?y)
 ("u" ?s)
 ("e" ?g)
 ("i" ?b)
 ("w" ?n)
 ("o" ?h)
 ("q" ?d)
 ("p" ?m)
 ("t" ?w)
 ("y" ?c)
 ("v" ?p)
 ("n" ?v)
 ("c" ?k)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?O)
 ("J" ?R)
 ("D" ?A)
 ("K" ?E)
 ("S" ?I)
 ("L" ?F)
 ("A" ?T)
 ("G" ?U)
 ("H" ?L)
 ("R" ?Y)
 ("U" ?S)
 ("E" ?G)
 ("I" ?B)
 ("W" ?N)
 ("O" ?H)
 ("Q" ?D)
 ("P" ?M)
 ("T" ?W)
 ("Y" ?C)
 ("V" ?P)
 ("N" ?V)
 ("C" ?K)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-g" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?h)
 ("j" ?e)
 ("d" ?o)
 ("k" ?r)
 ("s" ?a)
 ("l" ?i)
 ("a" ?l)
 ("g" ?u)
 ("h" ?s)
 ("r" ?g)
 ("u" ?n)
 ("e" ?y)
 ("i" ?t)
 ("w" ?m)
 ("o" ?d)
 ("q" ?b)
 ("p" ?f)
 ("t" ?w)
 ("y" ?z)
 ("v" ?c)
 ("n" ?p)
 ("c" ?v)
 ("m" ?k)
 ("x" ?x)
 ("z" ?j)
 ("b" ?q)
 ("F" ?H)
 ("J" ?E)
 ("D" ?O)
 ("K" ?R)
 ("S" ?A)
 ("L" ?I)
 ("A" ?L)
 ("G" ?U)
 ("H" ?S)
 ("R" ?G)
 ("U" ?N)
 ("E" ?Y)
 ("I" ?T)
 ("W" ?M)
 ("O" ?D)
 ("Q" ?B)
 ("P" ?F)
 ("T" ?W)
 ("Y" ?Z)
 ("V" ?C)
 ("N" ?P)
 ("C" ?V)
 ("M" ?K)
 ("X" ?X)
 ("Z" ?J)
 ("B" ?Q)
)


(quail-define-package
 "markov-insanity-h" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?a)
 ("d" ?i)
 ("k" ?o)
 ("s" ?t)
 ("l" ?r)
 ("a" ?u)
 ("g" ?y)
 ("h" ?n)
 ("r" ?s)
 ("u" ?m)
 ("e" ?l)
 ("i" ?b)
 ("w" ?f)
 ("o" ?d)
 ("q" ?w)
 ("p" ?h)
 ("t" ?c)
 ("y" ?g)
 ("v" ?p)
 ("n" ?v)
 ("c" ?k)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?E)
 ("J" ?A)
 ("D" ?I)
 ("K" ?O)
 ("S" ?T)
 ("L" ?R)
 ("A" ?U)
 ("G" ?Y)
 ("H" ?N)
 ("R" ?S)
 ("U" ?M)
 ("E" ?L)
 ("I" ?B)
 ("W" ?F)
 ("O" ?D)
 ("Q" ?W)
 ("P" ?H)
 ("T" ?C)
 ("Y" ?G)
 ("V" ?P)
 ("N" ?V)
 ("C" ?K)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-i" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?n)
 ("j" ?t)
 ("d" ?s)
 ("k" ?c)
 ("s" ?d)
 ("l" ?l)
 ("a" ?o)
 ("g" ?m)
 ("h" ?r)
 ("r" ?g)
 ("u" ?e)
 ("e" ?f)
 ("i" ?v)
 ("w" ?a)
 ("o" ?b)
 ("q" ?p)
 ("p" ?k)
 ("t" ?z)
 ("y" ?x)
 ("v" ?u)
 ("n" ?i)
 ("c" ?q)
 ("m" ?h)
 ("x" ?j)
 ("z" ?w)
 ("b" ?y)
 ("F" ?N)
 ("J" ?T)
 ("D" ?S)
 ("K" ?C)
 ("S" ?D)
 ("L" ?L)
 ("A" ?O)
 ("G" ?M)
 ("H" ?R)
 ("R" ?G)
 ("U" ?E)
 ("E" ?F)
 ("I" ?V)
 ("W" ?A)
 ("O" ?B)
 ("Q" ?P)
 ("P" ?K)
 ("T" ?Z)
 ("Y" ?X)
 ("V" ?U)
 ("N" ?I)
 ("C" ?Q)
 ("M" ?H)
 ("X" ?J)
 ("Z" ?W)
 ("B" ?Y)
)


(quail-define-package
 "markov-insanity-j" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?u)
 ("j" ?e)
 ("d" ?o)
 ("k" ?a)
 ("s" ?i)
 ("l" ?t)
 ("a" ?n)
 ("g" ?h)
 ("h" ?s)
 ("r" ?r)
 ("u" ?d)
 ("e" ?l)
 ("i" ?m)
 ("w" ?w)
 ("o" ?c)
 ("q" ?y)
 ("p" ?f)
 ("t" ?g)
 ("y" ?p)
 ("v" ?b)
 ("n" ?v)
 ("c" ?k)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?U)
 ("J" ?E)
 ("D" ?O)
 ("K" ?A)
 ("S" ?I)
 ("L" ?T)
 ("A" ?N)
 ("G" ?H)
 ("H" ?S)
 ("R" ?R)
 ("U" ?D)
 ("E" ?L)
 ("I" ?M)
 ("W" ?W)
 ("O" ?C)
 ("Q" ?Y)
 ("P" ?F)
 ("T" ?G)
 ("Y" ?P)
 ("V" ?B)
 ("N" ?V)
 ("C" ?K)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-k" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?n)
 ("d" ?i)
 ("k" ?s)
 ("s" ?l)
 ("l" ?a)
 ("a" ?f)
 ("g" ?y)
 ("h" ?w)
 ("r" ?m)
 ("u" ?o)
 ("e" ?g)
 ("i" ?r)
 ("w" ?u)
 ("o" ?t)
 ("q" ?b)
 ("p" ?h)
 ("t" ?d)
 ("y" ?c)
 ("v" ?p)
 ("n" ?v)
 ("c" ?k)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?E)
 ("J" ?N)
 ("D" ?I)
 ("K" ?S)
 ("S" ?L)
 ("L" ?A)
 ("A" ?F)
 ("G" ?Y)
 ("H" ?W)
 ("R" ?M)
 ("U" ?O)
 ("E" ?G)
 ("I" ?R)
 ("W" ?U)
 ("O" ?T)
 ("Q" ?B)
 ("P" ?H)
 ("T" ?D)
 ("Y" ?C)
 ("V" ?P)
 ("N" ?V)
 ("C" ?K)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-l" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?l)
 ("d" ?i)
 ("k" ?a)
 ("s" ?o)
 ("l" ?y)
 ("a" ?d)
 ("g" ?m)
 ("h" ?u)
 ("r" ?f)
 ("u" ?s)
 ("e" ?t)
 ("i" ?k)
 ("w" ?v)
 ("o" ?p)
 ("q" ?w)
 ("p" ?r)
 ("t" ?b)
 ("y" ?c)
 ("v" ?g)
 ("n" ?n)
 ("c" ?h)
 ("m" ?z)
 ("x" ?x)
 ("z" ?j)
 ("b" ?q)
 ("F" ?E)
 ("J" ?L)
 ("D" ?I)
 ("K" ?A)
 ("S" ?O)
 ("L" ?Y)
 ("A" ?D)
 ("G" ?M)
 ("H" ?U)
 ("R" ?F)
 ("U" ?S)
 ("E" ?T)
 ("I" ?K)
 ("W" ?V)
 ("O" ?P)
 ("Q" ?W)
 ("P" ?R)
 ("T" ?B)
 ("Y" ?C)
 ("V" ?G)
 ("N" ?N)
 ("C" ?H)
 ("M" ?Z)
 ("X" ?X)
 ("Z" ?J)
 ("B" ?Q)
)


(quail-define-package
 "markov-insanity-m" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?a)
 ("d" ?y)
 ("k" ?o)
 ("s" ?i)
 ("l" ?p)
 ("a" ?u)
 ("g" ?r)
 ("h" ?s)
 ("r" ?b)
 ("u" ?m)
 ("e" ?c)
 ("i" ?n)
 ("w" ?l)
 ("o" ?f)
 ("q" ?t)
 ("p" ?d)
 ("t" ?h)
 ("y" ?w)
 ("v" ?g)
 ("n" ?v)
 ("c" ?k)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?E)
 ("J" ?A)
 ("D" ?Y)
 ("K" ?O)
 ("S" ?I)
 ("L" ?P)
 ("A" ?U)
 ("G" ?R)
 ("H" ?S)
 ("R" ?B)
 ("U" ?M)
 ("E" ?C)
 ("I" ?N)
 ("W" ?L)
 ("O" ?F)
 ("Q" ?T)
 ("P" ?D)
 ("T" ?H)
 ("Y" ?W)
 ("V" ?G)
 ("N" ?V)
 ("C" ?K)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-n" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?d)
 ("j" ?g)
 ("d" ?e)
 ("k" ?t)
 ("s" ?o)
 ("l" ?c)
 ("a" ?i)
 ("g" ?s)
 ("h" ?a)
 ("r" ?k)
 ("u" ?y)
 ("e" ?l)
 ("i" ?n)
 ("w" ?u)
 ("o" ?f)
 ("q" ?v)
 ("p" ?b)
 ("t" ?j)
 ("y" ?q)
 ("v" ?r)
 ("n" ?h)
 ("c" ?p)
 ("m" ?w)
 ("x" ?x)
 ("z" ?m)
 ("b" ?z)
 ("F" ?D)
 ("J" ?G)
 ("D" ?E)
 ("K" ?T)
 ("S" ?O)
 ("L" ?C)
 ("A" ?I)
 ("G" ?S)
 ("H" ?A)
 ("R" ?K)
 ("U" ?Y)
 ("E" ?L)
 ("I" ?N)
 ("W" ?U)
 ("O" ?F)
 ("Q" ?V)
 ("P" ?B)
 ("T" ?J)
 ("Y" ?Q)
 ("V" ?R)
 ("N" ?H)
 ("C" ?P)
 ("M" ?W)
 ("X" ?X)
 ("Z" ?M)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-o" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?u)
 ("j" ?n)
 ("d" ?r)
 ("k" ?f)
 ("s" ?m)
 ("l" ?w)
 ("a" ?t)
 ("g" ?o)
 ("h" ?l)
 ("r" ?s)
 ("u" ?p)
 ("e" ?c)
 ("i" ?v)
 ("w" ?k)
 ("o" ?d)
 ("q" ?b)
 ("p" ?i)
 ("t" ?a)
 ("y" ?h)
 ("v" ?g)
 ("n" ?y)
 ("c" ?j)
 ("m" ?e)
 ("x" ?x)
 ("z" ?z)
 ("b" ?q)
 ("F" ?U)
 ("J" ?N)
 ("D" ?R)
 ("K" ?F)
 ("S" ?M)
 ("L" ?W)
 ("A" ?T)
 ("G" ?O)
 ("H" ?L)
 ("R" ?S)
 ("U" ?P)
 ("E" ?C)
 ("I" ?V)
 ("W" ?K)
 ("O" ?D)
 ("Q" ?B)
 ("P" ?I)
 ("T" ?A)
 ("Y" ?H)
 ("V" ?G)
 ("N" ?Y)
 ("C" ?J)
 ("M" ?E)
 ("X" ?X)
 ("Z" ?Z)
 ("B" ?Q)
)


(quail-define-package
 "markov-insanity-p" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?o)
 ("d" ?r)
 ("k" ?a)
 ("s" ?l)
 ("l" ?p)
 ("a" ?i)
 ("g" ?u)
 ("h" ?s)
 ("r" ?t)
 ("u" ?h)
 ("e" ?y)
 ("i" ?g)
 ("w" ?b)
 ("o" ?m)
 ("q" ?w)
 ("p" ?k)
 ("t" ?d)
 ("y" ?n)
 ("v" ?c)
 ("n" ?f)
 ("c" ?v)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?E)
 ("J" ?O)
 ("D" ?R)
 ("K" ?A)
 ("S" ?L)
 ("L" ?P)
 ("A" ?I)
 ("G" ?U)
 ("H" ?S)
 ("R" ?T)
 ("U" ?H)
 ("E" ?Y)
 ("I" ?G)
 ("W" ?B)
 ("O" ?M)
 ("Q" ?W)
 ("P" ?K)
 ("T" ?D)
 ("Y" ?N)
 ("V" ?C)
 ("N" ?F)
 ("C" ?V)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-q" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?u)
 ("j" ?e)
 ("d" ?t)
 ("k" ?a)
 ("s" ?o)
 ("l" ?i)
 ("a" ?n)
 ("g" ?h)
 ("h" ?s)
 ("r" ?r)
 ("u" ?d)
 ("e" ?l)
 ("i" ?m)
 ("w" ?w)
 ("o" ?c)
 ("q" ?y)
 ("p" ?f)
 ("t" ?g)
 ("y" ?p)
 ("v" ?b)
 ("n" ?v)
 ("c" ?k)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?U)
 ("J" ?E)
 ("D" ?T)
 ("K" ?A)
 ("S" ?O)
 ("L" ?I)
 ("A" ?N)
 ("G" ?H)
 ("H" ?S)
 ("R" ?R)
 ("U" ?D)
 ("E" ?L)
 ("I" ?M)
 ("W" ?W)
 ("O" ?C)
 ("Q" ?Y)
 ("P" ?F)
 ("T" ?G)
 ("Y" ?P)
 ("V" ?B)
 ("N" ?V)
 ("C" ?K)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-r" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?o)
 ("d" ?i)
 ("k" ?a)
 ("s" ?s)
 ("l" ?y)
 ("a" ?t)
 ("g" ?d)
 ("h" ?n)
 ("r" ?r)
 ("u" ?k)
 ("e" ?u)
 ("i" ?m)
 ("w" ?l)
 ("o" ?g)
 ("q" ?c)
 ("p" ?v)
 ("t" ?p)
 ("y" ?h)
 ("v" ?f)
 ("n" ?w)
 ("c" ?b)
 ("m" ?j)
 ("x" ?x)
 ("z" ?q)
 ("b" ?z)
 ("F" ?E)
 ("J" ?O)
 ("D" ?I)
 ("K" ?A)
 ("S" ?S)
 ("L" ?Y)
 ("A" ?T)
 ("G" ?D)
 ("H" ?N)
 ("R" ?R)
 ("U" ?K)
 ("E" ?U)
 ("I" ?M)
 ("W" ?L)
 ("O" ?G)
 ("Q" ?C)
 ("P" ?V)
 ("T" ?P)
 ("Y" ?H)
 ("V" ?F)
 ("N" ?W)
 ("C" ?B)
 ("M" ?J)
 ("X" ?X)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-s" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?t)
 ("j" ?e)
 ("d" ?h)
 ("k" ?i)
 ("s" ?o)
 ("l" ?s)
 ("a" ?a)
 ("g" ?u)
 ("h" ?p)
 ("r" ?c)
 ("u" ?m)
 ("e" ?l)
 ("i" ?k)
 ("w" ?w)
 ("o" ?y)
 ("q" ?n)
 ("p" ?f)
 ("t" ?b)
 ("y" ?q)
 ("v" ?g)
 ("n" ?d)
 ("c" ?r)
 ("m" ?v)
 ("x" ?j)
 ("z" ?x)
 ("b" ?z)
 ("F" ?T)
 ("J" ?E)
 ("D" ?H)
 ("K" ?I)
 ("S" ?O)
 ("L" ?S)
 ("A" ?A)
 ("G" ?U)
 ("H" ?P)
 ("R" ?C)
 ("U" ?M)
 ("E" ?L)
 ("I" ?K)
 ("W" ?W)
 ("O" ?Y)
 ("Q" ?N)
 ("P" ?F)
 ("T" ?B)
 ("Y" ?Q)
 ("V" ?G)
 ("N" ?D)
 ("C" ?R)
 ("M" ?V)
 ("X" ?J)
 ("Z" ?X)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-t" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?h)
 ("j" ?o)
 ("d" ?e)
 ("k" ?i)
 ("s" ?a)
 ("l" ?r)
 ("a" ?t)
 ("g" ?l)
 ("h" ?s)
 ("r" ?u)
 ("u" ?y)
 ("e" ?w)
 ("i" ?c)
 ("w" ?m)
 ("o" ?n)
 ("q" ?f)
 ("p" ?p)
 ("t" ?b)
 ("y" ?z)
 ("v" ?d)
 ("n" ?g)
 ("c" ?k)
 ("m" ?x)
 ("x" ?v)
 ("z" ?j)
 ("b" ?q)
 ("F" ?H)
 ("J" ?O)
 ("D" ?E)
 ("K" ?I)
 ("S" ?A)
 ("L" ?R)
 ("A" ?T)
 ("G" ?L)
 ("H" ?S)
 ("R" ?U)
 ("U" ?Y)
 ("E" ?W)
 ("I" ?C)
 ("W" ?M)
 ("O" ?N)
 ("Q" ?F)
 ("P" ?P)
 ("T" ?B)
 ("Y" ?Z)
 ("V" ?D)
 ("N" ?G)
 ("C" ?K)
 ("M" ?X)
 ("X" ?V)
 ("Z" ?J)
 ("B" ?Q)
)


(quail-define-package
 "markov-insanity-u" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?r)
 ("j" ?t)
 ("d" ?s)
 ("k" ?l)
 ("s" ?n)
 ("l" ?p)
 ("a" ?g)
 ("g" ?c)
 ("h" ?i)
 ("r" ?e)
 ("u" ?m)
 ("e" ?b)
 ("i" ?a)
 ("w" ?d)
 ("o" ?f)
 ("q" ?o)
 ("p" ?z)
 ("t" ?y)
 ("y" ?k)
 ("v" ?x)
 ("n" ?q)
 ("c" ?v)
 ("m" ?h)
 ("x" ?u)
 ("z" ?w)
 ("b" ?j)
 ("F" ?R)
 ("J" ?T)
 ("D" ?S)
 ("K" ?L)
 ("S" ?N)
 ("L" ?P)
 ("A" ?G)
 ("G" ?C)
 ("H" ?I)
 ("R" ?E)
 ("U" ?M)
 ("E" ?B)
 ("I" ?A)
 ("W" ?D)
 ("O" ?F)
 ("Q" ?O)
 ("P" ?Z)
 ("T" ?Y)
 ("Y" ?K)
 ("V" ?X)
 ("N" ?Q)
 ("C" ?V)
 ("M" ?H)
 ("X" ?U)
 ("Z" ?W)
 ("B" ?J)
)


(quail-define-package
 "markov-insanity-v" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?i)
 ("d" ?a)
 ("k" ?o)
 ("s" ?y)
 ("l" ?u)
 ("a" ?r)
 ("g" ?t)
 ("h" ?n)
 ("r" ?h)
 ("u" ?s)
 ("e" ?d)
 ("i" ?l)
 ("w" ?m)
 ("o" ?w)
 ("q" ?c)
 ("p" ?f)
 ("t" ?g)
 ("y" ?p)
 ("v" ?b)
 ("n" ?v)
 ("c" ?k)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?E)
 ("J" ?I)
 ("D" ?A)
 ("K" ?O)
 ("S" ?Y)
 ("L" ?U)
 ("A" ?R)
 ("G" ?T)
 ("H" ?N)
 ("R" ?H)
 ("U" ?S)
 ("E" ?D)
 ("I" ?L)
 ("W" ?M)
 ("O" ?W)
 ("Q" ?C)
 ("P" ?F)
 ("T" ?G)
 ("Y" ?P)
 ("V" ?B)
 ("N" ?V)
 ("C" ?K)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-x" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?p)
 ("j" ?c)
 ("d" ?t)
 ("k" ?a)
 ("s" ?i)
 ("l" ?e)
 ("a" ?f)
 ("g" ?o)
 ("h" ?u)
 ("r" ?h)
 ("u" ?q)
 ("e" ?n)
 ("i" ?s)
 ("w" ?r)
 ("o" ?d)
 ("q" ?l)
 ("p" ?m)
 ("t" ?w)
 ("y" ?y)
 ("v" ?g)
 ("n" ?b)
 ("c" ?v)
 ("m" ?k)
 ("x" ?x)
 ("z" ?j)
 ("b" ?z)
 ("F" ?P)
 ("J" ?C)
 ("D" ?T)
 ("K" ?A)
 ("S" ?I)
 ("L" ?E)
 ("A" ?F)
 ("G" ?O)
 ("H" ?U)
 ("R" ?H)
 ("U" ?Q)
 ("E" ?N)
 ("I" ?S)
 ("W" ?R)
 ("O" ?D)
 ("Q" ?L)
 ("P" ?M)
 ("T" ?W)
 ("Y" ?Y)
 ("V" ?G)
 ("N" ?B)
 ("C" ?V)
 ("M" ?K)
 ("X" ?X)
 ("Z" ?J)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-w" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?h)
 ("j" ?a)
 ("d" ?i)
 ("k" ?e)
 ("s" ?o)
 ("l" ?n)
 ("a" ?r)
 ("g" ?s)
 ("h" ?l)
 ("r" ?w)
 ("u" ?d)
 ("e" ?y)
 ("i" ?b)
 ("w" ?k)
 ("o" ?u)
 ("q" ?f)
 ("p" ?t)
 ("t" ?m)
 ("y" ?c)
 ("v" ?g)
 ("n" ?p)
 ("c" ?v)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?H)
 ("J" ?A)
 ("D" ?I)
 ("K" ?E)
 ("S" ?O)
 ("L" ?N)
 ("A" ?R)
 ("G" ?S)
 ("H" ?L)
 ("R" ?W)
 ("U" ?D)
 ("E" ?Y)
 ("I" ?B)
 ("W" ?K)
 ("O" ?U)
 ("Q" ?F)
 ("P" ?T)
 ("T" ?M)
 ("Y" ?C)
 ("V" ?G)
 ("N" ?P)
 ("C" ?V)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-y" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?o)
 ("j" ?e)
 ("d" ?s)
 ("k" ?i)
 ("s" ?t)
 ("l" ?l)
 ("a" ?a)
 ("g" ?p)
 ("h" ?d)
 ("r" ?m)
 ("u" ?r)
 ("e" ?w)
 ("i" ?f)
 ("w" ?c)
 ("o" ?b)
 ("q" ?h)
 ("p" ?n)
 ("t" ?u)
 ("y" ?y)
 ("v" ?g)
 ("n" ?v)
 ("c" ?k)
 ("m" ?x)
 ("x" ?j)
 ("z" ?q)
 ("b" ?z)
 ("F" ?O)
 ("J" ?E)
 ("D" ?S)
 ("K" ?I)
 ("S" ?T)
 ("L" ?L)
 ("A" ?A)
 ("G" ?P)
 ("H" ?D)
 ("R" ?M)
 ("U" ?R)
 ("E" ?W)
 ("I" ?F)
 ("W" ?C)
 ("O" ?B)
 ("Q" ?H)
 ("P" ?N)
 ("T" ?U)
 ("Y" ?Y)
 ("V" ?G)
 ("N" ?V)
 ("C" ?K)
 ("M" ?X)
 ("X" ?J)
 ("Z" ?Q)
 ("B" ?Z)
)


(quail-define-package
 "markov-insanity-z" "Latin-1" "(╯°□°）╯" t
 "Markov (Insanity) input method (rule: make your own)

Good luck, you'll need it.
" nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
      ("f" ?e)
 ("j" ?i)
 ("d" ?z)
 ("k" ?l)
 ("s" ?a)
 ("l" ?o)
 ("a" ?y)
 ("g" ?u)
 ("h" ?t)
 ("r" ?n)
 ("u" ?h)
 ("e" ?s)
 ("i" ?r)
 ("w" ?d)
 ("o" ?m)
 ("q" ?w)
 ("p" ?c)
 ("t" ?f)
 ("y" ?g)
 ("v" ?p)
 ("n" ?b)
 ("c" ?v)
 ("m" ?k)
 ("x" ?x)
 ("z" ?j)
 ("b" ?q)
 ("F" ?E)
 ("J" ?I)
 ("D" ?Z)
 ("K" ?L)
 ("S" ?A)
 ("L" ?O)
 ("A" ?Y)
 ("G" ?U)
 ("H" ?T)
 ("R" ?N)
 ("U" ?H)
 ("E" ?S)
 ("I" ?R)
 ("W" ?D)
 ("O" ?M)
 ("Q" ?W)
 ("P" ?C)
 ("T" ?F)
 ("Y" ?G)
 ("V" ?P)
 ("N" ?B)
 ("C" ?V)
 ("M" ?K)
 ("X" ?X)
 ("Z" ?J)
 ("B" ?Q)
)

(local-set-key (kbd "a") '(lambda () (interactive)
			    (set-input-method "markov-insanity-a")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "A") '(lambda () (interactive)
			    (set-input-method "markov-insanity-a")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "b") '(lambda () (interactive)
			    (set-input-method "markov-insanity-b")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "B") '(lambda () (interactive)
			    (set-input-method "markov-insanity-b")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "c") '(lambda () (interactive)
			    (set-input-method "markov-insanity-c")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "C") '(lambda () (interactive)
			    (set-input-method "markov-insanity-c")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "d") '(lambda () (interactive)
			    (set-input-method "markov-insanity-d")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "D") '(lambda () (interactive)
			    (set-input-method "markov-insanity-d")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "e") '(lambda () (interactive)
			    (set-input-method "markov-insanity-e")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "E") '(lambda () (interactive)
			    (set-input-method "markov-insanity-e")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "f") '(lambda () (interactive)
			    (set-input-method "markov-insanity-f")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "F") '(lambda () (interactive)
			    (set-input-method "markov-insanity-f")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "g") '(lambda () (interactive)
			    (set-input-method "markov-insanity-g")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "G") '(lambda () (interactive)
			    (set-input-method "markov-insanity-g")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "h") '(lambda () (interactive)
			    (set-input-method "markov-insanity-h")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "H") '(lambda () (interactive)
			    (set-input-method "markov-insanity-h")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "i") '(lambda () (interactive)
			    (set-input-method "markov-insanity-i")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "I") '(lambda () (interactive)
			    (set-input-method "markov-insanity-i")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "j") '(lambda () (interactive)
			    (set-input-method "markov-insanity-j")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "J") '(lambda () (interactive)
			    (set-input-method "markov-insanity-j")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "k") '(lambda () (interactive)
			    (set-input-method "markov-insanity-k")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "K") '(lambda () (interactive)
			    (set-input-method "markov-insanity-k")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "l") '(lambda () (interactive)
			    (set-input-method "markov-insanity-l")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "L") '(lambda () (interactive)
			    (set-input-method "markov-insanity-l")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "m") '(lambda () (interactive)
			    (set-input-method "markov-insanity-m")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "M") '(lambda () (interactive)
			    (set-input-method "markov-insanity-m")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "n") '(lambda () (interactive)
			    (set-input-method "markov-insanity-n")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "N") '(lambda () (interactive)
			    (set-input-method "markov-insanity-n")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "o") '(lambda () (interactive)
			    (set-input-method "markov-insanity-o")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "O") '(lambda () (interactive)
			    (set-input-method "markov-insanity-o")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "p") '(lambda () (interactive)
			    (set-input-method "markov-insanity-p")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "P") '(lambda () (interactive)
			    (set-input-method "markov-insanity-p")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "q") '(lambda () (interactive)
			    (set-input-method "markov-insanity-q")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "Q") '(lambda () (interactive)
			    (set-input-method "markov-insanity-q")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "r") '(lambda () (interactive)
			    (set-input-method "markov-insanity-r")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "R") '(lambda () (interactive)
			    (set-input-method "markov-insanity-r")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "s") '(lambda () (interactive)
			    (set-input-method "markov-insanity-s")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "S") '(lambda () (interactive)
			    (set-input-method "markov-insanity-s")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "t") '(lambda () (interactive)
			    (set-input-method "markov-insanity-t")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "T") '(lambda () (interactive)
			    (set-input-method "markov-insanity-t")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "u") '(lambda () (interactive)
			    (set-input-method "markov-insanity-u")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "U") '(lambda () (interactive)
			    (set-input-method "markov-insanity-u")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "v") '(lambda () (interactive)
			    (set-input-method "markov-insanity-v")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "V") '(lambda () (interactive)
			    (set-input-method "markov-insanity-v")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "x") '(lambda () (interactive)
			    (set-input-method "markov-insanity-x")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "X") '(lambda () (interactive)
			    (set-input-method "markov-insanity-x")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "w") '(lambda () (interactive)
			    (set-input-method "markov-insanity-w")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "W") '(lambda () (interactive)
			    (set-input-method "markov-insanity-w")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "y") '(lambda () (interactive)
			    (set-input-method "markov-insanity-y")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "Y") '(lambda () (interactive)
			    (set-input-method "markov-insanity-y")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "z") '(lambda () (interactive)
			    (set-input-method "markov-insanity-z")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )


(local-set-key (kbd "Z") '(lambda () (interactive)
			    (set-input-method "markov-insanity-z")
			    (self-insert-command 1)
			    (quail-show-keyboard-layout)
			    )
	       )
